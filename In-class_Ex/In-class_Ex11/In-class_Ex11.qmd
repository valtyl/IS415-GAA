---
title: "In-class Exercise 11: Spatial Interaction Models"
execute: 
  message: true
  warning: false
  echo: true
  eval: true
date: "27 March 2023"
date-modified: "`r Sys.Date()`"
number-sections: true
editor: visual
format: html
---

## Getting Started
```{r}
pacman::p_load(tmap, sf, sp, caret, stplanr, reshape2, broom, tidyverse)
```

## Preparing the Flow Data

### Importing the OD data
```{r}
odbus <- read_csv("data/aspatial/origin_destination_bus_202210.csv")
```

```{r}
odbus$ORIGIN_PT_CODE <- as.factor(odbus$ORIGIN_PT_CODE)
odbus$DESTINATION_PT_CODE <- as.factor(odbus$DESTINATION_PT_CODE)
```
convert from numeric to factor

### Extracting the study data
```{r}
#| eval: false
odbus7_9 <- odbus %>% 
            filter(DAY_TYPE == "WEEKDAY") %>%
            filter(TIME_PER_HOUR >= 7 & TIME_PER_HOUR <= 9) %>%
  group_by(ORIGIN_PT_CODE, DESTINATION_PT_CODE) %>% summarise(TRIPS = sum(TOTAL_TRIPS))
```
```{r}
#| eval: false
write_rds(odbus7_9, "data/rds/odbus7_9.rds")
```

```{r}
odbus7_9 <- read_rds("data/rds/odbus7_9.rds")
```


## Working with Geospatial Data

### Importing Geospatial Data

```{r}
busstop <- st_read(dsn = "data/geospatial",
                   layer = "BusStop") %>% st_transform(crs=3414)
```

```{r}
mpsz <- st_read(dsn = "data/geospatial",
                   layer = "MPSZ-2019") %>% st_transform(crs=3414)
```



## Geospatial Data Wrangling

### Combining Busstop and MPSZ

```{r}
busstop_mpsz <- st_intersection(busstop, mpsz) %>%
  select(BUS_STOP_N, SUBZONE_C) %>% st_drop_geometry()
```
```{r}
#| eval: false
od_data <- left_join(odbus7_9, busstop_mpsz,
                     by = c("ORIGIN_PT_CODE" = "BUS_STOP_N")) %>% rename(ORIGIN_BS = ORIGIN_PT_CODE,
                          ORIGIN_SZ = SUBZONE_C,
                          DESTIN_BS = DESTINATION_PT_CODE)
```

```{r}
#| eval: false
duplicate <- od_data %>% 
            group_by_all() %>% 
            filter(n()>1) %>% 
            ungroup()
```

```{r}
#| eval: false
od_data <- unique(od_data)
```

```{r}
#| eval: false
od_data <- left_join(od_data, busstop_mpsz,
                     by = c("DESTIN_BS" = "BUS_STOP_N"))
```

```{r}
#| eval: false
duplicate2 <- od_data %>% 
              group_by_all() %>% 
              filter(n()>1) %>% 
              ungroup()
```

```{r}
#| eval: false
od_data <- unique(od_data)
```

```{r}
#| eval: false
od_data <- od_data %>% rename(DESTIN_SZ = SUBZONE_C) %>% drop_na()
```

```{r}
#| eval: false
write_rds(od_data, "data/rds/od_data.rds")
```

```{r}
od_data <- read_rds("data/rds/od_data.rds")
```


## Visualising the Geospatial Data

```{r}
tmap_mode("plot")
qtm(mpsz)
```


## Viewing the Subzone spatial file

```{r}
head(mpsz, 10)
```


## Isolating SUBZONE_C (subzone_code) into a new df

```{r}
mpsz <- mpsz[order(mpsz$SUBZONE_C),] # need to sort for the matrix
head(mpsz, 10)
```


## Computing Distance

### Converting from sf data table to Spatial Polygon dataframe

```{r}
mpsz_sp <- as(mpsz, "Spatial")
```


### Computing the distance matrix

```{r}
dist <- spDists(mpsz_sp) # same as st_distance but this is sf method. spDists is sp method
dist
```


### Sorting the distance matrix
```{r}
sz_names <- mpsz$SUBZONE_C
```


### Attaching SUBZONE_C to row and column for distance matrix matching ahead
```{r}
colnames(dist) <- paste0(sz_names)
rownames(dist) <- paste0(sz_names)
```


### Pivoting distance value by SUBZONE_C
```{r}
distPair <- melt(dist) %>%
  rename(dist = value)
head(distPair, 10)
```


### Updating intra-zonal distances
```{r}
distPair %>%
  filter(dist > 0) %>%
  summary()
```


## Preparing Flow Data

### Separating intra-flow data
```{r}
distPair$dist <- ifelse(distPair$dist == 0, 50, distPair$dist)
```

```{r}
distPair <- distPair %>% rename(orig = Var1,
                                dest = Var2)
```

```{r}
write_rds(distPair, "data/rds/distPair.rds")
```


```{r}
pop <- read_csv("data/aspatial/pop.csv")
```

```{r}
pop <- pop %>% left_join(mpsz, by=c("PA" = "PLN_AREA_N",
                                    "SZ" = "SUBZONE_N")) %>% select(1:6) %>%
  rename(SZ_NAME = SZ,
         SZ = SUBZONE_C)
```


### Origin Population

```{r}
#| eval: false
flow_data1 <- flow_data1 %>% 
  left_join(distPair, 
            by = c("ORIGIN_SZ" = "orig",
                    "DESTIN_SZ" = "dest"))
```

```{r}
#| eval: false
flow_data1 <- flow_data1 %>%
  left_join(pop,
            by = c(ORIGIN_SZ = "SZ")) %>%
  rename(ORIGIN_AGE7_12 = AGE7_12,
         ORIGIN_AGE13_24 = AGE13_24,
         ORIGIN_AGE25_64 = AGE25_64) %>%
  select(-c(PA, SZ_NAME))
```

```{r}
#| eval: false
flow_data1 <- flow_data1 %>%
  left_join(pop,
            by = c(DESTIN_SZ = "SZ")) %>%
  rename(DESTIN_AGE7_12 = AGE7_12,
         DESTIN_AGE13_24 = AGE13_24,
         DESTIN_AGE25_64 = AGE25_64) %>%
  select(-c(PA, SZ_NAME))
```


